using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Text;

public partial class AttnRecords : System.Web.UI.Page
{
    AttnRemindManager objAttnRmdMgr = new AttnRemindManager();
    EmpInfoManager objEmpInfoMgr = new EmpInfoManager();
    DataTable dtEmpAttn = new DataTable();
    DataTable dtAbsentList;
    DataTable dtEmp;

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
           // this.InitializeDataTableAbsentList();
           // rdbRmdType.Checked = true;
            // Office is Changed to Lcation
            Common.FillDropDownList_Nil(objAttnRmdMgr.SelectLocation(0), ddlOffice);
            this.GetEmpoyeeRecords();
        }
    }

    protected void InitializeDataTableAbsentList()
    {
        dtAbsentList = new DataTable();
        dtAbsentList.Columns.Add("EmpID");
        dtAbsentList.Columns.Add("EMPNAME");
        dtAbsentList.Columns.Add("AbsentDates");
        dtAbsentList.Columns.Add("EmailID");
        dtAbsentList.AcceptChanges();
    }

    protected void GetEmpoyeeRecords()
    {
        if (Session["USERID"].ToString().Trim().ToUpper() != "ADMIN")
        {
           // dtEmp = objAttnRmdMgr.SelectSupervisorWiseEmp(Session["EMPID"].ToString().Trim());
            ddlOffice.Enabled = false;
            lblOffice.Visible = false;
            grEmpList.DataSource = objEmpInfoMgr.GetSuperVisiorWiseEmp(Session["EMPID"].ToString().ToUpper(), Session["OFFICEID"].ToString());
            grEmpList.DataBind();

        }
        else
        {
            dtEmp = objAttnRmdMgr.SelectLocationWiseEmp(ddlOffice.SelectedValue.ToString());
            ddlOffice.Enabled = true;
            lblOffice.Visible = true;
            grEmpList.DataSource = dtEmp;
            grEmpList.DataBind();
        }      
    }    

    protected bool GetEmployeeAbsentRecords()
    {
        this.InitializeDataTableAbsentList();
        string strEmpIDs = "";
        int i=0;
        foreach (GridViewRow gRow in grEmpList.Rows)
        {
            CheckBox chk = (CheckBox)gRow.Cells[0].FindControl("chkBox");
            if (chk.Checked == true)
            {

                if (strEmpIDs == "")
                    strEmpIDs = "'" + grEmpList.DataKeys[i].Values[0].ToString().Trim() + "'";
                else
                    strEmpIDs = strEmpIDs + ",'" + grEmpList.DataKeys[i].Values[0].ToString().Trim() + "'";
                // Adding to Absent List
                DataRow nRow = dtAbsentList.NewRow();
                nRow["EMPID"] = grEmpList.DataKeys[i].Values[0].ToString();
                nRow["EmailID"] = grEmpList.DataKeys[i].Values[2].ToString();
                nRow["EMPNAME"] = gRow.Cells[1].Text.Trim();
                dtAbsentList.Rows.Add(nRow);                
            }
            i++;
        }
        dtAbsentList.AcceptChanges();

        // Get Employee Wise Absent Records
        if (dtAbsentList.Rows.Count > 0)
        {

            dtEmpAttn = objAttnRmdMgr.GetAbsentRecord(strEmpIDs, Common.ReturnDate(txtFrom.Text.Trim()), Common.ReturnDate(txtTo.Text.Trim()));
            if (dtEmpAttn.Rows.Count > 0)
            {

                foreach (DataRow dRow in dtAbsentList.Rows)
                {
                    string strDates = "";
                    DataRow[] foundRows = dtEmpAttn.Select("EMPID='" + dRow["EMPID"].ToString() + "'");
                    if (foundRows.Length > 0)
                    {
                        foreach (DataRow dRow2 in foundRows)
                        {
                            if (strDates == "")
                            {
                                strDates = "Date: " + Common.DisplayDate(dRow2["ATTNDDATE"].ToString());

                            }
                            else
                            {
                                strDates = strDates + ", " + " \n Date: " + Common.DisplayDate(dRow2["ATTNDDATE"].ToString());
                            }
                        }
                    }
                    dRow["AbsentDates"] = strDates;
                }
                dtAbsentList.AcceptChanges();
            }
        }
        else
        {
            lblMsg.Text = "No employee has been selected";
            return false;
        }
        return true;
    }

    protected void ddlOffice_SelectedIndexChanged(object sender, EventArgs e)
    {
        this.GetEmpoyeeRecords();
    }
  
    protected void grEmpList_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        GridView _gridView = (GridView)sender;
        // Get the selected index and the command name
        int _selectedIndex = int.Parse(e.CommandArgument.ToString());
        string _commandName = e.CommandName;
        _gridView.SelectedIndex = _selectedIndex;
        string strPreYrLv = "";
        switch (_commandName)
        {
            case ("ViewClick"):
                //Open New Window
                StringBuilder sb = new StringBuilder();
                string strURL = "AttendanceRecordViewerRpt.aspx?params=" + grEmpList.SelectedRow.Cells[2].Text.Trim() + "," + Common.ReturnDate(txtFrom.Text.Trim()) + ", " + Common.ReturnDate(txtTo.Text.Trim()) + "," + rdbtnStatusList.SelectedValue.ToString().Trim();
                sb.Append("<script>");
                //sb.Append("window.open('" + strURL + "', '', 'fullscreen=true,scrollbars=yes,resizable=yes');");//
                sb.Append("window.open('" + strURL + "', '', '');");
                sb.Append("</script>");
                ScriptManager.RegisterStartupScript(this, this.GetType(), "ConfirmSubmit",
                                         sb.ToString(), false);
                ClientScript.RegisterStartupScript(this.GetType(), "ConfirmSubmit", sb.ToString());
                break;           
        }
    }
}
